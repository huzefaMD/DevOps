Ansible Setup Preparation commands


yum install python3.12 - this command to install python

yum install git - this command to install git

yum install openssl - this commad to install openssl

yum install ansible -y - this command to install ansible

ansible version - to check ansible version

/etc/ansible/hosts  - Ansible inventory path file

/etc/ansible/ansible.cfg - Ansible main configuration file

adduser USERNAME - to add user in linux

passwd USERNAME - to set password

visudo - this command to to change user privillage

ssh-keygen - this command to create key pair

ssh-copy-id USERNAME@IPADDRESS - this command to copy public key to nodes



Ansible Host Patterns


ansible all --list-hosts - list all nodes present in the host file

ansible demo --list-hosts - list demo group nodes of the host file

ansible demo[0] --list-hosts - this command shows the first node in the demo group

ansible demo[-1] --list-hosts - this command shows the last node in the demo grouop

ansible demo[0:1] --list-hosts - this command show the range in demo group



Ansibe Ad-Hoc Commands


ansible demo -a "ls" - this command list all file in demo group nodes.

ansible all -a "ls" - this command list all files in all nodes.

ansible all -a "touch devopsfile" - this command creates devopsfile in all nodes

ansible demo -a "ls -la" - this command list all hidden file in demo group nodes

ansible demo -a "sudo yum install httpd -y"  - this command install apache in demo group nodes

which httpd - this command to check wether httpd installed or not


Ansible-Modules


ansible demo -b -m yum -a "pkg=httpd state=present" - this command is to install httpd in demo node group

ansible demo -b -m yum -a "pkg=httpd state=latest" - this command is to update apache version in demo node group

ansible demo -b -m yum -a "pkg=httpd state=started" - this command is to update apache version in demo node group

ansible demo -b -m yum -a "pkg=httpd state=absent" - this command is to update apache version in demo node group

ansible demo -b -m user -a "name=dev1" - this command is to create user in demo node group

ansible demo [-1] -b -m copy -a "src=file.txt dest=/tmp" - this command is to copy file from Ansible server to last node in demo group

ansible demo -b -m copy -a "src=logo.bmp dest=/tmp" - this command is to copy file from Ansible to demo node group

ansible demo -m setup - this command to see 

ansible demo -m setup -a "filter=*ipv4*"




--- # This is First playbook
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  gather_facts: yes



--- # This is first task
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  tasks:
          - name: install httpd on redhat
            action: yum name=httpd state=installed






--- # This is Variable file for test
- hosts: demo
  user: ansible
  become: yes
  connection: ssh
  vars:
          pkgname: httpd
 tasks:
          - name: install httpd server on nodes
            action: yum name='{{pkgname}}' state=installed







--- # Creating an EC2 Instance 

- name: Creating an EC2 Instance with ansible cli

  hosts: localhost

  vars:

    region: ap-south-1

    instance_type: t3.micro

    ami: ami-0f9d9a251c1a44858

    key_name: ansible-demo

    vpc_name: ansible-vpc-test

    cidr_block: "10.10.0.0/16"

    cidr: "10.10.0.0/24"

    aws_access_key:<YOUR ACCESS KEY>

    aws_secret_key: <YOUR SECRET KEY>


  tasks:

    - name: Create a new VPC 

      amazon.aws.ec2_vpc_net:

        name: "Ansible-Test"

        cidr_block: "{{ cidr_block }}"

        aws_access_key: "{{ aws_access_key }}"

        aws_secret_key: "{{ aws_secret_key }}"

        region: "{{ region }}"

      register: vpc


    - name: Create a new Subnet

      amazon.aws.ec2_vpc_subnet:

        aws_access_key: "{{ aws_access_key }}"

        aws_secret_key: "{{ aws_secret_key }}"

        cidr: "{{ cidr }}"

        region: "{{ region }}"

        vpc_id: "{{ vpc.vpc.id }}"

      register: subnet
    

    - name: Create a Security Group  

      amazon.aws.ec2_security_group:

        name: "Ansible-Test-Security-Group"

        description: "Ansible-Testing"

        aws_access_key: "{{ aws_access_key }}"

        aws_secret_key: "{{ aws_secret_key }}"

        vpc_id: "{{ vpc.vpc.id }}"

        region: "{{ region }}"

        rules:

          - proto: tcp

            ports:

            - 80

            cidr_ip: 0.0.0.0/0

            rule_desc: "allow all on port 80"

      register: security_group
   

    - name: Launch an EC2 Instance

      amazon.aws.ec2_instance:

        name: "Test-Ansible"

        key_name: "{{ key_name }}"

        aws_access_key: "{{ aws_access_key }}"

        aws_secret_key: "{{ aws_secret_key }}"

        vpc_subnet_id: "{{ subnet.subnet.id }}"

        instance_type: "{{ instance_type }}"

        security_group: "{{ security_group.group_id  }}"

        count: 1

        wait: yes

        aws_region: "ap-south-1"

        network:

          assign_public_ip: true

        image_id: "{{ ami }}"
